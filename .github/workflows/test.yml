
name:  Build and Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: ${{ matrix.os }} with Python-${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    env:
      SOTODLIB_TEST_DISABLE_PLOTS: 1
    strategy:
      # Ensure that a test continues even if another fails.  Useful for
      # debugging multiple problems in parallel.
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            python: "3.9"
            pyshort: "39"
          - os: ubuntu-latest
            python: "3.12"
            pyshort: "312"
          - os: macos-14
            python: "3.10"
            pyshort: "310"
          - os: macos-14
            python: "3.12"
            pyshort: "312"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: ${{ matrix.python }}

      - name: Install Dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install --upgrade wheel
          python3 -m pip install so3g
          python3 -m pip install pshmem
          python3 -m pip install --pre toast

      - name: Install OpenMPI for Tests
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install -y libopenmpi-dev
          python3 -m pip install mpi4py

      - name: Install sotodlib
        run: |
          python3 -m pip install -vv .[tests]

      - name: Run Serial Tests
        run: |
          export OMP_NUM_THREADS=2
          export OPENBLAS_NUM_THREADS=2
          export MPI_DISABLE=1
          python3 -m pytest -vv ./tests

      - name: Run MPI Tests
        if: runner.os == 'Linux'
        run: |
          export OMP_NUM_THREADS=1
          export OPENBLAS_NUM_THREADS=1
          mpirun -n 2 python3 -m pytest -vv ./tests
